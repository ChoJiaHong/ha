---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRWGhmOEFrUmk5TEdXNUcyLzkzcFIvREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEEwTWpJd09ETTFORGRhRncweU5qQTBNakl3T0RNMU5EZGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMlVaYjFGbzNzc1hOMG90Yi93bnpmcTY5VmJSMWtOaVNPemFEd3VwK3gwM1pmTW03WDdBQQorVWRoMUc3bzI4U09mcUZwRE5RN3QzYmhVWW9BZXJkMzdCZ0JNK3JnR0tyaW1vV1diUDNNdkNOdFV2MFpQL2xtCi9HaG1La3l5K3lEUWNHY3Z0RDBCaVVZNktYWkYyMExIMkFWaTJud2RRaldzNVRlWGE1WnJZUHd1bEg2ZmlKL0sKVDc5YnY2TUNXcGx1MzBadDZqdXVsdUFGYzVWV2lBRHBGT1FxdlJDU3NEdlFZVWtXM05vYTNxQVk3Rmw4QW9iNgp2ZXFGdTFaMzJKb3pEYTRxbTRUbzdDdzFNNVlDNUl6MWYwamQyVVExMHVwUzJtcFZ3WHcyZDNSMHdaaTFsc21vCnRYN29BS1BlMzdBNjh2VERkT0pCUkZsMXZKajdnL1B1Y3dJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUFLVHlVdmlsT0IvSnBjYzJsb053ZW1BOVJoc0ZncXkwOEpzNGlDNEIwTkoKN3k1d291c01XY3ZUZlJoMmtLTlFNOXpvd0Nlb0pGN0J1UGUyWEJ3Mld6MzZ3YkkxWGoyVFZMdTNTRS96eUFYegpST3V1RW9KakpIcUVkalMwNUZhbE9BNm1oRGRzQkFDMURtVnVsZlRHL0Q5bS9FNTc4UmQwMHhEbEJib0pSMVJXCnBmaGNzS0NXemdsOXZRNllXRXJaNXk4c2JSdHR2TDN1NFp6N1dXZGx2SWRyeWNXNHlFZVh2SHJuUXdxZVUxSjEKRk5OSW9GYjJFL2N3eGtGLzEvcmM0V3ZXTDZNcGFDNTFyMXQzZXVWdkhWZStWT1BzVDYwOVBWZUdzdDN4Y3hoZwpHOW81a3lJZkIydlM5VGFzSWJiZUZFOU83ZFRJL2ZEV1BqZ1ZXdlNkMGZRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMlVaYjFGbzNzc1hOMG90Yi93bnpmcTY5VmJSMWtOaVNPemFEd3VwK3gwM1pmTW03Clg3QUErVWRoMUc3bzI4U09mcUZwRE5RN3QzYmhVWW9BZXJkMzdCZ0JNK3JnR0tyaW1vV1diUDNNdkNOdFV2MFoKUC9sbS9HaG1La3l5K3lEUWNHY3Z0RDBCaVVZNktYWkYyMExIMkFWaTJud2RRaldzNVRlWGE1WnJZUHd1bEg2ZgppSi9LVDc5YnY2TUNXcGx1MzBadDZqdXVsdUFGYzVWV2lBRHBGT1FxdlJDU3NEdlFZVWtXM05vYTNxQVk3Rmw4CkFvYjZ2ZXFGdTFaMzJKb3pEYTRxbTRUbzdDdzFNNVlDNUl6MWYwamQyVVExMHVwUzJtcFZ3WHcyZDNSMHdaaTEKbHNtb3RYN29BS1BlMzdBNjh2VERkT0pCUkZsMXZKajdnL1B1Y3dJREFRQUJBb0lCQVFDSm03RWZQZ0JXdmthTQpHVzByaXY3bmRmNCtJS3Z4RCtrVmpZSkgyY0p2c2hPVG9DU0hCdTZtOHBtNE5JSlFaaDJsZjg4THJBTWlRQzJXCk9lUHgxTzhqM1ZRdHNJMDdza2NRZkpqMzhJcFJnZEtFby8zdzhhRlRMVCsvZkpKQzBOYVN5aGVCZkwzVFZtSVIKem5HUjI2cThXelR2a1hucWJCcFRsakRWbUEvci9NRU54MFBpWGR2NGwrUVFMNWJISTdteEtZeUY3ZTR2WklhdwpYQnlwN3gyVjlnMGg4ckRGdDJVZ1RhemIyaEpkVWdzclBla0JKdmI4YVFndWJ6YjR3aG1uaDlIZ1k5ckNmczRKCjZxUFI2TzB6dm9BWkhPbkxUTlgvZUJRbHMwa2dZUzVJZk8yeTE5Ym0yN1dEOWIwT211U0lpZzRxU1VJb1JQcUgKOTFEK2R1alJBb0dCQU9QOUVZcFd3RnI1RDFBODVQUFR1dHczb3d3aTRDOUVpUWp5T0dvc0RxMmFpK1E1dkh5RwpUbmw2WldRcGtKZDNHT3dPMXlnTk9KZHlCODFSRjVzM1BaTUZEOEdtNWh1V25nNEJKZUV1UGFWbkI2VVR3YUI1CjJOYU5YN0g4dFpzUEZLVHhuRkZjZjQrUTFObFU4OE9BdmNDWmEvU0FXQ2cydFo5bVRRQVpUd1hyQW9HQkFQUDQKVDc3VTZuRXE2U0RuNEJDMzBBci9sK1pXTlppMk9HSE5vaGZZekl0OWV1L2RLVUVMZWZtT2Z3S3FxTGpEclJkQwpId2lnV09QNEx6Nm1sTUdIcDVpcVppb3hRWWpCRGIxYklMekRXWW5DQzZCQkpYdklJWlRNQWd6eVdoblhFYTZvClE5azhQQytEM1RjczhRUFcyS2MzZEdCNmZFcStIcTNqM1F1TDJlK1pBb0dBWkZsSlZTaWw5ZVRXRnEwVzRUTjYKZGQrUFJwSTdOdExsdGloWEtIUkg2YVd5bVR2SWVNN3N6NDlOL1c1R0ZFVDVsVDFhK21nSFZyRjhPYVROelNYZApWazdPQnFDZGU5c3BxbVJhOWVoU2ZmRUJibWxwdW1hblNKaGxYSVFzc3hsS0x1ZWh0RFlRZDNKNkhVYkZISElZCkV5UDBYbVAzYVl2YkdWUC81R0UvWlEwQ2dZQS9hekR2bmxGREViQ0FTVVpKa2o2V1hWS1RJWjNWRUtrZlkyRGIKYWhQaHZzQ1NVWjlEdFVRRHh6TGs4by9oVjV4TEMza2R1UERpY2NWMk43ODdmNVBsYjRZWE9hNmJhZk8wWVZmbApPYkt3eUt4VkFCcEtUdi9MdWl4ZVNURjZ2aGx1bVhicHBXclB2eXRtQ0Z5dWJzN3F5Tk9Mc010V2NvMXZEbWlMCmM5TTNJUUtCZ0Z4SEh5R3VSWmtZNDJVeTJZSWdQc1JVTXRRZnU4SVpJUzAzdWwweHp3OW50K0JlRnlmOTEvREwKRUR2RURKZHZIaWxaOHV2NE03QzJDbm5Nelp5ZDhuNXBjWmJOem9CMWd3QjNqOU9kdUM3djlPQWkrVEJ1T2l4egpYRWxQeDYydTJ4Y2tmb2h5bmQ5bUt1Qm9PRzFZVmc5NldzVDZVanRiamR6T3pockpMbitBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRWGhmOEFrUmk5TEdXNUcyLzkzcFIvREFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEEwTWpJd09ETTFORGRhRncweU5qQTBNakl3T0RNMU5EZGFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMlVaYjFGbzNzc1hOMG90Yi93bnpmcTY5VmJSMWtOaVNPemFEd3VwK3gwM1pmTW03WDdBQQorVWRoMUc3bzI4U09mcUZwRE5RN3QzYmhVWW9BZXJkMzdCZ0JNK3JnR0tyaW1vV1diUDNNdkNOdFV2MFpQL2xtCi9HaG1La3l5K3lEUWNHY3Z0RDBCaVVZNktYWkYyMExIMkFWaTJud2RRaldzNVRlWGE1WnJZUHd1bEg2ZmlKL0sKVDc5YnY2TUNXcGx1MzBadDZqdXVsdUFGYzVWV2lBRHBGT1FxdlJDU3NEdlFZVWtXM05vYTNxQVk3Rmw4QW9iNgp2ZXFGdTFaMzJKb3pEYTRxbTRUbzdDdzFNNVlDNUl6MWYwamQyVVExMHVwUzJtcFZ3WHcyZDNSMHdaaTFsc21vCnRYN29BS1BlMzdBNjh2VERkT0pCUkZsMXZKajdnL1B1Y3dJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUFLVHlVdmlsT0IvSnBjYzJsb053ZW1BOVJoc0ZncXkwOEpzNGlDNEIwTkoKN3k1d291c01XY3ZUZlJoMmtLTlFNOXpvd0Nlb0pGN0J1UGUyWEJ3Mld6MzZ3YkkxWGoyVFZMdTNTRS96eUFYegpST3V1RW9KakpIcUVkalMwNUZhbE9BNm1oRGRzQkFDMURtVnVsZlRHL0Q5bS9FNTc4UmQwMHhEbEJib0pSMVJXCnBmaGNzS0NXemdsOXZRNllXRXJaNXk4c2JSdHR2TDN1NFp6N1dXZGx2SWRyeWNXNHlFZVh2SHJuUXdxZVUxSjEKRk5OSW9GYjJFL2N3eGtGLzEvcmM0V3ZXTDZNcGFDNTFyMXQzZXVWdkhWZStWT1BzVDYwOVBWZUdzdDN4Y3hoZwpHOW81a3lJZkIydlM5VGFzSWJiZUZFOU83ZFRJL2ZEV1BqZ1ZXdlNkMGZRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUloSHlWV0hQRWJTKzZ2d3dFV2dlQWN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJMU1EUXlNakE0TXpVME9Gb1hEVEkyTURReU1qQTRNelUwT0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBclB3SjJ1d2xlNWhrNGdnYmFHODRydFFGOUVKQmExNERSVFJSSmhvRApIamduNjAyUmhmN3Ftc1RUVjZMNWd3b0psdUdFMldMWS81Umx2SXpJL3pIeklHa205VG1DSWhWNnpuL1dObmRjCjA2N2I2Skhqb1gwOWZ6WktaV2tYOTZSS25BbHN4QjNvVkJwT1l0eTlVNllPZytXSTRoLzhwYzVkbGNWck92ZGoKWno4MUhKa2t2bkluVEpzNU5ZTytBNmgrYmFVSDhuQmIyUVVnTmVsdmsyeUNweGZ3OTcxanhHQU53S2VwV0xRdQpFbUFTOHdxLzBnM0lSREZQOW4wc3JxTWNENnplQVU4eTA2cWxPV2N0eXRjVDBoWGpMdSs3UlJQQVRBTXFXL0M5ClM5Njd3cnBWTG5ya1FzeHFTZURYVm5Lak1LN2ZvKzVwRWUrYUNCVUF1KyszZ3dJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2ZPZEhNSXh0R1M1aVR4Y0Q0U25oN1JKZjUKK0NrSkN6aTRJMEZrVFNESG00NVFTNFBMbSt3S2MybHBTcTJjNk5MMmo2Y1V0VHNKeWlkWlovMU42cXFiZWZYNQp2V1dHSHdsWDkyUlRtVnNFczJJcThETzV3UkI4TFJ4S3g1SEc0Zkp6VytXSjNqWFAycUFtNmJzdjlSQTlHcEFpCmsyTVhhQ2RpcnlIZ0c0a3d5WUpEUkZxQjU1Nlhob0lxaWNubEdURXRXVE5BaloyUERUVk92dFd1b21JQ3VZYmIKbDh3OGEzbVpTcE9NVzY1ekFNRW10Uzk0dnNhakVvZC9kN0NqU21DbnYzZWpiMzdtZzQ5QUVnb0pFRkNIeXE2TApRcGVQdDE3WWVvNVNsTm9LSWlmQ21Fd0YxL2tOSmxSMzRiaDBYQk5hUEhsQVM4VTMvQnhkQzNVMkdwLzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBclB3SjJ1d2xlNWhrNGdnYmFHODRydFFGOUVKQmExNERSVFJSSmhvREhqZ242MDJSCmhmN3Ftc1RUVjZMNWd3b0psdUdFMldMWS81Umx2SXpJL3pIeklHa205VG1DSWhWNnpuL1dObmRjMDY3YjZKSGoKb1gwOWZ6WktaV2tYOTZSS25BbHN4QjNvVkJwT1l0eTlVNllPZytXSTRoLzhwYzVkbGNWck92ZGpaejgxSEprawp2bkluVEpzNU5ZTytBNmgrYmFVSDhuQmIyUVVnTmVsdmsyeUNweGZ3OTcxanhHQU53S2VwV0xRdUVtQVM4d3EvCjBnM0lSREZQOW4wc3JxTWNENnplQVU4eTA2cWxPV2N0eXRjVDBoWGpMdSs3UlJQQVRBTXFXL0M5Uzk2N3dycFYKTG5ya1FzeHFTZURYVm5Lak1LN2ZvKzVwRWUrYUNCVUF1KyszZ3dJREFRQUJBb0lCQUJ3dDRwMGJJdkFEWDB2Qwo3bFFRNmpid3F4ZWpRMnp1SDdKQ1Y0WFJidmlaUlVkN2wxMHdyWjhRdVN6cGk2UGhHcmJOZmdxN280WGU4c1BJClcyWFhDVGdhYVJKQmtBVmxZbUFKU3lnTVFiN3FHVURGbzBOSFY2RkZndEVLVWJFeHZrVzA4MWJ2V0UxN0M1SG4KUzZBNHlOeUxvOFRTV1NIWmdEMUpyN0luWXJZS3ZUWG1ReGp0RC9nQmtWRTlCcGFKRm9JYkxIU2tjRVlMcVJvZwp3alQ5VDVKWG9PVG9hbEp4N1RmY09HU3JnWXJmcVVLbW80NHdueEhPUDU5K2VWNEc1a2dnbTk4elh3WGNaRVJKCmEydFErTXJmNDNkZWc0WldobmhGVnFiWEJMeDEwVkdDeUhGWmZxdkNnSW1FQWtzMlhIOTVyeGdvK0JPbEJBNG0KSlE5eHVjRUNnWUVBNEF0NGQ5QUdYYXRhM1BRY0R0d1U5VjJSQnRDR0g5MS9aVTFIV3o2U2tod0VVV2RqcU54SQo2Yk42OWpBdm1DeVZDT0JtVWF1Q3ltZGwxV0p1cU9rV3lLMEtWWUZLWS9ncDNCeU0vcnlYb1hTZE1ZaXlIN2VXCmFnYXpqNUUyV2N1bWJRZjlTOHRpbGdjV01xL2x5VVN5b2s4Uzl4RGluVzF5UnlDNzdueUNMbmtDZ1lFQXhhZzEKUmdocEZKeFNwZ3NvQUFXNXgrZzdqbXZZUnFwaEE4TVYxNU1jeDVodG5HTENUQTRSTTcwbFozV0tlckpCNEVzOApObWRJTkRCT1hyaU02VlcwSDUwcm1PZ0NqSFEzS3IwdSt3MHU4bElqRktjT2NZVmlMR0pnektuN0M5aVg1S21SCkovc3IzenB2enNQSmVJNEtvaEo1VVN5enZTVDlxcS9iRG5nTUp0c0NnWUVBdzY4aEhEeTBvckdjM2luVUsrSnIKNTljK2FWNU9GNXpsdlh3ZTNBSXVFTEdwejlQbXhzRUlhaDZhUWxiWjZ5YmRVUEIyVGRUb21wSnU3azVYNnU0VApPVmx5RWphbjIrTVA1TEdITUtOV0tPM3FzaTM3cmhveXBRNlBYTkR2VU1TLzZyRTB1ak85T3Q2YnM4L1FldGVtCjBuOFFTSDBXQVh4cmVOYU5ib0tQVGJrQ2dZQW9nZU9CR2NJblJpNHQ5MFZZVTlRU0l3YnBsako1c1BzMjRTazkKeDlsekVrc01iTFR6RDBMNVBuOUc1N0RjbW1HanpPZG5JdDJLVElnVEkzRkZkSm40aktaZHJOYXc0RFJhSHZGYwo1QVBHQjQxRzgwR2poRGx0YlMvM1liS2daK0FoTFpzZy9YbXRRdldkQTBUcjN2aFE1TVpXRzNvdWZrRTZWTlhvCjdqTlhWd0tCZ1FDUklMMzBVcGVUcFdIcUVqa2w5a0hIWXhHMXRUR2xxejJCbVN4Q2RHbHp3Z0hlMDBza29NbkYKUnpJUmtWVVNHNjhFZnpvUjRRMEVKenE5dG4vaG9GSi9INlF6RDQrVWdFRWdEWUZaZnoxVWhyUDFJMUNnbVRiQQpXUC9STGVtdzNEWlA3YXozUlpmVnUyWE9USkk0QjE1RXRpTFpicTgvRjZueXF2RzJuelhQN0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lSQUloSHlWV0hQRWJTKzZ2d3dFV2dlQWN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa2JHbHVhMlZ5WkMxd2IyeHBZM2t0ZG1Gc2FXUmhkRzl5TG14cGJtdGxjbVF1YzNaagpNQjRYRFRJMU1EUXlNakE0TXpVME9Gb1hEVEkyTURReU1qQTRNelUwT0Zvd0x6RXRNQ3NHQTFVRUF4TWtiR2x1CmEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBclB3SjJ1d2xlNWhrNGdnYmFHODRydFFGOUVKQmExNERSVFJSSmhvRApIamduNjAyUmhmN3Ftc1RUVjZMNWd3b0psdUdFMldMWS81Umx2SXpJL3pIeklHa205VG1DSWhWNnpuL1dObmRjCjA2N2I2Skhqb1gwOWZ6WktaV2tYOTZSS25BbHN4QjNvVkJwT1l0eTlVNllPZytXSTRoLzhwYzVkbGNWck92ZGoKWno4MUhKa2t2bkluVEpzNU5ZTytBNmgrYmFVSDhuQmIyUVVnTmVsdmsyeUNweGZ3OTcxanhHQU53S2VwV0xRdQpFbUFTOHdxLzBnM0lSREZQOW4wc3JxTWNENnplQVU4eTA2cWxPV2N0eXRjVDBoWGpMdSs3UlJQQVRBTXFXL0M5ClM5Njd3cnBWTG5ya1FzeHFTZURYVm5Lak1LN2ZvKzVwRWUrYUNCVUF1KyszZ3dJREFRQUJvM0F3YmpBT0JnTlYKSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZApFd0VCL3dRQ01BQXdMd1lEVlIwUkJDZ3dKb0lrYkdsdWEyVnlaQzF3YjJ4cFkza3RkbUZzYVdSaGRHOXlMbXhwCmJtdGxjbVF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ2ZPZEhNSXh0R1M1aVR4Y0Q0U25oN1JKZjUKK0NrSkN6aTRJMEZrVFNESG00NVFTNFBMbSt3S2MybHBTcTJjNk5MMmo2Y1V0VHNKeWlkWlovMU42cXFiZWZYNQp2V1dHSHdsWDkyUlRtVnNFczJJcThETzV3UkI4TFJ4S3g1SEc0Zkp6VytXSjNqWFAycUFtNmJzdjlSQTlHcEFpCmsyTVhhQ2RpcnlIZ0c0a3d5WUpEUkZxQjU1Nlhob0lxaWNubEdURXRXVE5BaloyUERUVk92dFd1b21JQ3VZYmIKbDh3OGEzbVpTcE9NVzY1ekFNRW10Uzk0dnNhakVvZC9kN0NqU21DbnYzZWpiMzdtZzQ5QUVnb0pFRkNIeXE2TApRcGVQdDE3WWVvNVNsTm9LSWlmQ21Fd0YxL2tOSmxSMzRiaDBYQk5hUEhsQVM4VTMvQnhkQzNVMkdwLzUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtHejF5RkJJMTMwdVU2RW1oRUl6b0V3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TlRBME1qSXdPRE0xTkRkYUZ3MHlOakEwTWpJd09ETTFORGRhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRE5QM0sxMmtVTzJpRFFqZ0tuVzVmd1JjSU5ESXlPQW4xUDVvVkpoak15YzV0OQp3ZlpTekVXa2czTU9RcGI4cGh1bUFJM05OeHVuTGJ4T2IvaWZLK3cxYzVQd1l0bWd6WFlGT0JhdHFlOFdDd3NrCllEb3BrOUsyekl5M3RJdlRLZEdJMDdNbWpVN0VxRzRZaCtuTy80dzhkU2NiNnRuM2J1RlhLSzFqa3lyYmNPR3IKZU85b1RBWUI4MllRV1VxUVEwRUxkTk1SL0JybkJ5aTlJTjVNNnFGQnlrUy9iMW50RGJtTVY5U1VvOVJvcS9qeApEM090RFlIbVdFcXFzQzZ2NGRUMERoY2xpMXVRdGx6eHI4TVpMS2t4ZTRQTFBkNUpubjhSdGdYUkFRRGxkL3BECnN4RC9wZU0yMy81K1g5cU5oSG51eEQzQ1NOTWYwVkJjU3NMWjVjRjdBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURKdlhxblRYaE8yYlBLZ2JhSHBIN2VXSDlqdzN0cHFiR00KU0F3T1lVOUhieHlYL2dPTkhmcnlDYXhhcXNxZGNZZnZMV3VCaFZNUXpSdnpCV1JIbDdBdkt4RkJPZkYrMG5BMgpsaWhrTEc2aGovaTk3dmlRS0s0cmYzWFVVT1NLYS9lNm9FUlFYT1dSeHVZTlZ4Z29zeVpLZHlveGErLzExaS8rClRwQmxaVVA0bytRaXYyM3ZjdkMvajN1THY5djZZWHJsRGtGWFVCT1ZFNzd3RlBrL1lhWWVNcFJUYUVEcnVBRlgKeHNLbS9VMllXcFFyZ2ticmdna0dpU1lyTmJPNUlnR2VOcWZlalBGTHJvbXVQdVBVUUVHZ2ZDdG9reGFvS1p3UgpmMklzL3hQOXVNN1NRT1JUdDZycVFVRTdob3ZFS2RiNGloR3QxbUhtb0d1ekx5aHVteTRFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBelQ5eXRkcEZEdG9nMEk0Q3AxdVg4RVhDRFF5TWpnSjlUK2FGU1lZek1uT2JmY0gyClVzeEZwSU56RGtLVy9LWWJwZ0NOelRjYnB5MjhUbS80bnl2c05YT1Q4R0xab00xMkJUZ1dyYW52RmdzTEpHQTYKS1pQU3RzeU10N1NMMHluUmlOT3pKbzFPeEtodUdJZnB6ditNUEhVbkcrclo5MjdoVnlpdFk1TXEyM0RocTNqdgphRXdHQWZObUVGbEtrRU5CQzNUVEVmd2E1d2NvdlNEZVRPcWhRY3BFdjI5WjdRMjVqRmZVbEtQVWFLdjQ4UTl6CnJRMkI1bGhLcXJBdXIrSFU5QTRYSll0YmtMWmM4YS9ER1N5cE1YdUR5ejNlU1o1L0ViWUYwUUVBNVhmNlE3TVEKLzZYak50LytmbC9hallSNTdzUTl3a2pUSDlGUVhFckMyZVhCZXdJREFRQUJBb0lCQUFuQW5BaThDRS8rV1ZUUAppcHk5STJrTlIzMHJQWHA1Nzg1ZUc3TTBwelljZkNUcmxISzJ0aEJ0Rm9oMDdZdXZzTnlnWmh4OEk5bzd1QmphCkJTdzdBQXhDSTZObWJ3VE8vbTZkRGFiT3prZHoydUd0bU5YazZqdzVWKzVhcTlJcXlJUUIyeDlYMDRoUW9IcVYKNnF3bFJGcVREbnFySEJRL3RvRlhzM1ZweHIyS2Q3NnIxUFErVm1RZXRkQ3phNGU3Y0FDYU9VVzdnRG9vYUxlRQpJcFpxM3Mza2p2NGZTZ3IyS0Q5ZEJIejBzQzI5NTJQRHBET0M3OE91TWFmVzljSmxuTitsYUxhNUtZL0JFZmpWClBkaWYxNHp3WmkzTnlVTFU4MVE1OENxUkxaMFBvRjBBalpOTGtraXJjaGgwY0Z6STZEM3ZPanJHNFVoditYTTkKTDRUNlc2RUNnWUVBMmNJak1aNlpmN09jL2huTG0xcDcvdUJWSkVjbDhqaE01MWduenQzZ2FwMHZlOHJ3bVU4bworMDJKcTBORnVkYjhHK2owbEdwTURGMnJUZ2VFUHRLMi8rSkpaQlFqK0JFdVVJUVF2ODU0V2RxWVcrQ29wZGplCmFOT0t1S2JKL0RBYVhUZnNRaFg0QUkxWEpFWXF2ZFNreXJWeUpYeTVSZ3ZyNkpFMjc5TlZyaU1DZ1lFQThVcmUKdTZUdEFXc0ZNRVlIMUJ3TXFqNERhYjEwZjF2NC9kTVFQQnczcURHUVdwTDR2TkNFbjRuWE4zWEZtQ1pRa21tdgpXRmUxTCs4Y3Jva2trakszZUdYdGNoeVlNcGNuNHRhVnYrUWg5bjB6ZHZ3dHRxbkpSL2NKUEFZWXdDQk00OXZhCisvbmN4NE5wWXJIL2NjcGN1UVVVUW9ib2Z5aUNiMEc4U290c1dNa0NnWUVBa1lEZVlWWjNmTlA0ai9XT2ppVDgKKzRiTWZXd3BGOXUwejFTaGJPSG5CWFk0ZDBCWVdpaUIyc0dwdnMwNXR2N0hBS005WWpwUXpHWitnNm9VSEtKUgo4MU14OVBSY1FITENmcnh3TUtuMjB4dDBlTmY1K0srYmxYSGNuSnVlRmF2U3dmMFBHZTF5QkhSdENPajF3RmhwCk1LWGpPdGRIT1YzWDZWTzI0TE5XNmY4Q2dZQVdleDFKYWxKU29YLzRRVzRWU3crN0JOQVlsL2cwcllNRFV4amUKSU5ybXBzZUdTTTgzK0UyQzk3cS9oZytFMzN6K1J5NTVFcUxrOW1nN3NyZGZqNjRjWDVMQjRQd2xLb1FpMUU5YgpjNHZlaFVlNFBFS2VGQytXcnVPRFhpWU1NSFk1ZkpCb2paME9VYVlOOWZ1UXhJUGpFU0FVR3JHcXQwRi8wQ1lVCjQreVNVUUtCZ1FDa3JnZlgzV0R0SXZka3JGUFg3RDcybXJWcVU0RHpmOStpNEIwdEl4YlliZEQxSXZnYkF4QXIKbGpLbWdTQW84UnBPYVRKMGx2dW9RcDJPR2RUWEhhOXh2QTJJUkFVYnQvamU2ZGdZZ1Z1U2paRUZ0VnZGeVFQMQpiUkNFd2oydFhQOEdjSUd0ak9SUzN6V2xIenp2QkI3ZS9lQ2RUN3lFL1NXSEh3NGgwTS8weXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUtHejF5RkJJMTMwdVU2RW1oRUl6b0V3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMbk4yWXpBZQpGdzB5TlRBME1qSXdPRE0xTkRkYUZ3MHlOakEwTWpJd09ETTFORGRhTUMweEt6QXBCZ05WQkFNVElteHBibXRsCmNtUXRjSEp2ZUhrdGFXNXFaV04wYjNJdWJHbHVhMlZ5WkM1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRRE5QM0sxMmtVTzJpRFFqZ0tuVzVmd1JjSU5ESXlPQW4xUDVvVkpoak15YzV0OQp3ZlpTekVXa2czTU9RcGI4cGh1bUFJM05OeHVuTGJ4T2IvaWZLK3cxYzVQd1l0bWd6WFlGT0JhdHFlOFdDd3NrCllEb3BrOUsyekl5M3RJdlRLZEdJMDdNbWpVN0VxRzRZaCtuTy80dzhkU2NiNnRuM2J1RlhLSzFqa3lyYmNPR3IKZU85b1RBWUI4MllRV1VxUVEwRUxkTk1SL0JybkJ5aTlJTjVNNnFGQnlrUy9iMW50RGJtTVY5U1VvOVJvcS9qeApEM090RFlIbVdFcXFzQzZ2NGRUMERoY2xpMXVRdGx6eHI4TVpMS2t4ZTRQTFBkNUpubjhSdGdYUkFRRGxkL3BECnN4RC9wZU0yMy81K1g5cU5oSG51eEQzQ1NOTWYwVkJjU3NMWjVjRjdBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIKL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFILwpCQUl3QURBdEJnTlZIUkVFSmpBa2dpSnNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF1CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUURKdlhxblRYaE8yYlBLZ2JhSHBIN2VXSDlqdzN0cHFiR00KU0F3T1lVOUhieHlYL2dPTkhmcnlDYXhhcXNxZGNZZnZMV3VCaFZNUXpSdnpCV1JIbDdBdkt4RkJPZkYrMG5BMgpsaWhrTEc2aGovaTk3dmlRS0s0cmYzWFVVT1NLYS9lNm9FUlFYT1dSeHVZTlZ4Z29zeVpLZHlveGErLzExaS8rClRwQmxaVVA0bytRaXYyM3ZjdkMvajN1THY5djZZWHJsRGtGWFVCT1ZFNzd3RlBrL1lhWWVNcFJUYUVEcnVBRlgKeHNLbS9VMllXcFFyZ2ticmdna0dpU1lyTmJPNUlnR2VOcWZlalBGTHJvbXVQdVBVUUVHZ2ZDdG9reGFvS1p3UgpmMklzL3hQOXVNN1NRT1JUdDZycVFVRTdob3ZFS2RiNGloR3QxbUhtb0d1ekx5aHVteTRFCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.14.6
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.14.6
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNTA0MjIwODM1MzdaFw0yNjA0MjIwODM1NTdaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEcb7cTERbI9FofG+FUiTtLU6nEWsTpILD88VI77izjgLFqu8dKiNiQxkOcac7
            vD0T7EQ7ryF+jwiVLtvEn9Kx6aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBRwW32Aa2fCKtulUS8wotD6xYPfJTAKBggqhkjOPQQDAgNHADBEAiAnou0uf6II
            sv3IJt1XEXcJYnLdbl2Guqh4GJnnoGIj2QIgYnMjy9Njv0tjSeIGPdUuWu7a6an6
            PxmY7s3N7wEeNYc=
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNTA0MjIwODM1MzdaFw0yNjA0MjIwODM1NTdaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEcb7cTERbI9FofG+FUiTtLU6nEWsTpILD88VI77izjgLFqu8dKiNiQxkOcac7
      vD0T7EQ7ryF+jwiVLtvEn9Kx6aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBRwW32Aa2fCKtulUS8wotD6xYPfJTAKBggqhkjOPQQDAgNHADBEAiAnou0uf6II
      sv3IJt1XEXcJYnLdbl2Guqh4GJnnoGIj2QIgYnMjy9Njv0tjSeIGPdUuWu7a6an6
      PxmY7s3N7wEeNYc=
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.6
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.3
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOVEEwTWpJd09ETTFNemRhRncweU5qQTBNakl3T0RNMU5UZGFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVjYjdjVEVSYkk5Rm9mRytGVWlUdExVNm5FV3NUcElMRDg4Vkk3N2l6amdMRnF1OGRLaU5pUXhrT2NhYzcKdkQwVDdFUTdyeUYrandpVkx0dkVuOUt4NmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUndXMzJBYTJmQ0t0dWxVUzh3b3RENnhZUGZKVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFub3UwdWY2SUkKc3YzSUp0MVhFWGNKWW5MZGJsMkd1cWg0R0pubm9HSWoyUUlnWW5Nank5Tmp2MHRqU2VJR1BkVXVXdTdhNmFuNgpQeG1ZN3MzTjd3RWVOWWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhOZWd3VHU5MXJZaUsrLytIT0d1Q3JBYzIyQ2NPRVBzeTlUN3lJVjRMQ21vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFY2I3Y1RFUmJJOUZvZkcrRlVpVHRMVTZuRVdzVHBJTEQ4OFZJNzdpempnTEZxdThkS2lOaQpReGtPY2FjN3ZEMFQ3RVE3cnlGK2p3aVZMdHZFbjlLeDZRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBhzCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNTA0MjIwODM1MzdaFw0yNjA0MjIwODM1NTdaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEcb7cTERbI9FofG+FUiTtLU6nEWsTpILD88VI77izjgLFqu8dKiNiQxkOcac7
    vD0T7EQ7ryF+jwiVLtvEn9Kx6aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBRwW32Aa2fCKtulUS8wotD6xYPfJTAKBggqhkjOPQQDAgNHADBEAiAnou0uf6II
    sv3IJt1XEXcJYnLdbl2Guqh4GJnnoGIj2QIgYnMjy9Njv0tjSeIGPdUuWu7a6an6
    PxmY7s3N7wEeNYc=
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.6
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.14.6
        linkerd.io/proxy-version: stable-2.14.6
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 699f659f8598bafc38b647a21104607367a1b04f2f7eb64ba451d38e3593d8d2
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: arha-node-type
                operator: In
                values:
                - controller-node
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.6
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: ee63e1a96bd32e1763adf0bf5968eecce0e18ad444bdd119a9195ec110fe35d9
        linkerd.io/created-by: linkerd/cli stable-2.14.6
        linkerd.io/proxy-version: stable-2.14.6
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 699f659f8598bafc38b647a21104607367a1b04f2f7eb64ba451d38e3593d8d2
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: arha-node-type
                operator: In
                values:
                - controller-node
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.6
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
spec:
  concurrencyPolicy: Replace
  schedule: "45 08 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.14.6
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.6
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.6
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 827da71fdfe2de4a77422257403d55368b988c375d1fdfd74474965ac97fe436
        linkerd.io/created-by: linkerd/cli stable-2.14.6
        linkerd.io/proxy-version: stable-2.14.6
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 699f659f8598bafc38b647a21104607367a1b04f2f7eb64ba451d38e3593d8d2
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: arha-node-type
                operator: In
                values:
                - controller-node
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.14.6
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaHpDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlOVEEwTWpJd09ETTFNemRhRncweU5qQTBNakl3T0RNMU5UZGFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFY2I3Y1RFUmJJOUZvZkcrRlVpVHRMVTZuRVdzVHBJTEQ4OFZJNzdpempnTEZxdThkS2lOaVF4a09jYWM3CiAgICAgICAgdkQwVDdFUTdyeUYrandpVkx0dkVuOUt4NmFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlJ3VzMyQWEyZkNLdHVsVVM4d290RDZ4WVBmSlRBS0JnZ3Foa2pPUFFRREFnTkhBREJFQWlBbm91MHVmNklJCiAgICAgICAgc3YzSUp0MVhFWGNKWW5MZGJsMkd1cWg0R0pubm9HSWoyUUlnWW5Nank5Tmp2MHRqU2VJR1BkVXVXdTdhNmFuNgogICAgICAgIFB4bVk3czNON3dFZU5ZYz0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUhOZWd3VHU5MXJZaUsrLytIT0d1Q3JBYzIyQ2NPRVBzeTlUN3lJVjRMQ21vQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVjYjdjVEVSYkk5Rm9mRytGVWlUdExVNm5FV3NUcElMRDg4Vkk3N2l6amdMRnF1OGRLaU5pCiAgICAgICAgUXhrT2NhYzd2RDBUN0VRN3J5Ritqd2lWTHR2RW45S3g2UT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJoekNDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU5UQTBNakl3T0RNMU16ZGFGdzB5TmpBME1qSXdPRE0xTlRkYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVjYjdjVEVSYkk5Rm9mRytGVWlUdExVNm5FV3NUcElMRDg4Vkk3N2l6amdMRnF1OGRLaU5pUXhrT2NhYzcKICB2RDBUN0VRN3J5Ritqd2lWTHR2RW45S3g2YU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUndXMzJBYTJmQ0t0dWxVUzh3b3RENnhZUGZKVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUFub3UwdWY2SUkKICBzdjNJSnQxWEVYY0pZbkxkYmwyR3VxaDRHSm5ub0dJajJRSWdZbk1qeTlOanYwdGpTZUlHUGRVdVd1N2E2YW42CiAgUHhtWTdzM043d0VlTlljPQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
